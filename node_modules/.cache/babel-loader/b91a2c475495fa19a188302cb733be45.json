{"ast":null,"code":"import { cartActionTypes } from \"utils/actionTypes\";\nconst {\n  ADD_TO_CART,\n  REMOVE_CART_ITEM,\n  DECREASE_QUANTITY\n} = cartActionTypes;\nconst initialState = {\n  cartItems: []\n};\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action,\n        cloneCartItems = [...state.cartItems],\n        indexOfPayloadItem = cloneCartItems.findIndex(cartItem => cartItem.id === payload.id);\n\n  switch (type) {\n    case ADD_TO_CART:\n      {\n        if (indexOfPayloadItem > -1) {\n          cloneCartItems[indexOfPayloadItem].quantity += 1;\n        } else {\n          payload.quantity = 1;\n          cloneCartItems.push(payload);\n        }\n\n        return { ...state,\n          cartItems: cloneCartItems\n        };\n      }\n\n    case REMOVE_CART_ITEM:\n      {\n        return { ...state,\n          payload\n        };\n      }\n\n    case DECREASE_QUANTITY:\n      {\n        cloneCartItems[indexOfPayloadItem].quantity -= 1;\n        return { ...state,\n          cartItems: cloneCartItems\n        };\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/samtanis/Sagar Projects/AegonLife/aegon-app/src/reducers/cart/cartReducer.js"],"names":["cartActionTypes","ADD_TO_CART","REMOVE_CART_ITEM","DECREASE_QUANTITY","initialState","cartItems","state","action","type","payload","cloneCartItems","indexOfPayloadItem","findIndex","cartItem","id","quantity","push"],"mappings":"AAAA,SAASA,eAAT,QAAgC,mBAAhC;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,gBAAf;AAAiCC,EAAAA;AAAjC,IAAuDH,eAA7D;AAEA,MAAMI,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AADQ,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;AAAA,QACEG,cAAc,GAAG,CAAC,GAAGJ,KAAK,CAACD,SAAV,CADnB;AAAA,QAEEM,kBAAkB,GAAGD,cAAc,CAACE,SAAf,CACnBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBL,OAAO,CAACK,EADjB,CAFvB;;AAMA,UAAQN,IAAR;AACE,SAAKP,WAAL;AAAkB;AAChB,YAAIU,kBAAkB,GAAG,CAAC,CAA1B,EAA6B;AAC3BD,UAAAA,cAAc,CAACC,kBAAD,CAAd,CAAmCI,QAAnC,IAA+C,CAA/C;AACD,SAFD,MAEO;AACLN,UAAAA,OAAO,CAACM,QAAR,GAAmB,CAAnB;AACAL,UAAAA,cAAc,CAACM,IAAf,CAAoBP,OAApB;AACD;;AAED,eAAO,EACL,GAAGH,KADE;AAELD,UAAAA,SAAS,EAAEK;AAFN,SAAP;AAID;;AAED,SAAKR,gBAAL;AAAuB;AACrB,eAAO,EACL,GAAGI,KADE;AAELG,UAAAA;AAFK,SAAP;AAID;;AAED,SAAKN,iBAAL;AAAwB;AACtBO,QAAAA,cAAc,CAACC,kBAAD,CAAd,CAAmCI,QAAnC,IAA+C,CAA/C;AAEA,eAAO,EACL,GAAGT,KADE;AAELD,UAAAA,SAAS,EAAEK;AAFN,SAAP;AAID;;AAED;AACE,aAAOJ,KAAP;AAhCJ;AAkCD,CAzCD","sourcesContent":["import { cartActionTypes } from \"utils/actionTypes\";\n\nconst { ADD_TO_CART, REMOVE_CART_ITEM, DECREASE_QUANTITY } = cartActionTypes;\n\nconst initialState = {\n  cartItems: []\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action,\n    cloneCartItems = [...state.cartItems],\n    indexOfPayloadItem = cloneCartItems.findIndex(\n      cartItem => cartItem.id === payload.id\n    );\n\n  switch (type) {\n    case ADD_TO_CART: {\n      if (indexOfPayloadItem > -1) {\n        cloneCartItems[indexOfPayloadItem].quantity += 1;\n      } else {\n        payload.quantity = 1;\n        cloneCartItems.push(payload);\n      }\n\n      return {\n        ...state,\n        cartItems: cloneCartItems\n      };\n    }\n\n    case REMOVE_CART_ITEM: {\n      return {\n        ...state,\n        payload\n      };\n    }\n\n    case DECREASE_QUANTITY: {\n      cloneCartItems[indexOfPayloadItem].quantity -= 1;\n\n      return {\n        ...state,\n        cartItems: cloneCartItems\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}