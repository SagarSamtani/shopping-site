{"ast":null,"code":"import React,{memo}from\"react\";import{connect}from\"react-redux\";import Card from\"@material-ui/core/Card\";import cartProductStyles from\"styles/cartProduct\";import CardMedia from\"@material-ui/core/CardMedia\";import{makeStyles}from\"@material-ui/core/styles\";import CardActions from\"@material-ui/core/CardActions\";import Button from\"@material-ui/core/Button\";import ButtonGroup from\"@material-ui/core/ButtonGroup\";import{addToCart as _addToCart,decreaseQuantity as _decreaseQuantity,removeCartItem as _removeCartItem}from\"actions/cart/cartActions\";var useStyles=makeStyles(function(theme){return cartProductStyles(theme);});var CartProduct=function CartProduct(props){var productInfo=props.productInfo,addToCart=props.addToCart,decreaseQuantity=props.decreaseQuantity,removeCartItem=props.removeCartItem,cartItems=props.cartItems,name=productInfo.name,image=productInfo.image,price=productInfo.price,currency=productInfo.currency,quantity=productInfo.quantity;var classes=useStyles();return/*#__PURE__*/React.createElement(Card,{className:classes.card},/*#__PURE__*/React.createElement(CardMedia,{className:classes.media,image:require(\"assets/images/\".concat(image)),alt:image,title:image}),/*#__PURE__*/React.createElement(CardActions,{className:classes.actionItems},/*#__PURE__*/React.createElement(\"span\",{className:classes.price},currency,price),/*#__PURE__*/React.createElement(\"div\",{className:classes.qtyContainer},/*#__PURE__*/React.createElement(\"span\",null,\"Qty\"),/*#__PURE__*/React.createElement(ButtonGroup,{className:classes.buttonGroup},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){addToCart(productInfo);}},\"+\"),/*#__PURE__*/React.createElement(\"span\",null,quantity),/*#__PURE__*/React.createElement(Button,{disabled:quantity<2,onClick:function onClick(){decreaseQuantity(productInfo);}},\"-\")))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{className:classes.productName},name),/*#__PURE__*/React.createElement(\"div\",{className:classes.totalContainer},/*#__PURE__*/React.createElement(\"span\",{className:classes.leftSpacing},\"Total\"),/*#__PURE__*/React.createElement(\"span\",{className:classes.leftSpacing},quantity*price))),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){removeCartItem(productInfo);},variant:\"outlined\",className:classes.addBtn},\"Remove\"));};var mapStateToProps=function mapStateToProps(_ref){var cartReducer=_ref.cartReducer;var cartItems=cartReducer.cartItems;return{cartItems:cartItems};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{addToCart:function addToCart(cartProduct){return dispatch(_addToCart(cartProduct));},decreaseQuantity:function decreaseQuantity(cartProduct){return dispatch(_decreaseQuantity(cartProduct));},removeCartItem:function removeCartItem(cartProduct){return dispatch(_removeCartItem(cartProduct));}};};export default connect(mapStateToProps,mapDispatchToProps)(memo(CartProduct));","map":{"version":3,"sources":["/Users/samtanis/Sagar Projects/AegonLife/aegon-app/src/components/CartProduct/index.js"],"names":["React","memo","connect","Card","cartProductStyles","CardMedia","makeStyles","CardActions","Button","ButtonGroup","addToCart","decreaseQuantity","removeCartItem","useStyles","theme","CartProduct","props","productInfo","cartItems","name","image","price","currency","quantity","classes","card","media","require","actionItems","qtyContainer","buttonGroup","productName","totalContainer","leftSpacing","addBtn","mapStateToProps","cartReducer","mapDispatchToProps","dispatch","cartProduct"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { memo } from \"react\";\nimport { connect } from \"react-redux\";\nimport Card from \"@material-ui/core/Card\";\nimport cartProductStyles from \"styles/cartProduct\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport {\n  addToCart,\n  decreaseQuantity,\n  removeCartItem\n} from \"actions/cart/cartActions\";\n\nconst useStyles = makeStyles(theme => cartProductStyles(theme));\n\nconst CartProduct = props => {\n  const {\n      productInfo,\n      addToCart,\n      decreaseQuantity,\n      removeCartItem,\n      cartItems\n    } = props,\n    { name, image, price, currency, quantity } = productInfo;\n\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image={require(`assets/images/${image}`)}\n        alt={image}\n        title={image}\n      />\n\n      <CardActions className={classes.actionItems}>\n        <span className={classes.price}>\n          {currency}\n          {price}\n        </span>\n        <div className={classes.qtyContainer}>\n          <span>Qty</span>\n          <ButtonGroup className={classes.buttonGroup}>\n            <Button\n              onClick={() => {\n                addToCart(productInfo);\n              }}>\n              +\n            </Button>\n            <span>{quantity}</span>\n            <Button\n              disabled={quantity < 2}\n              onClick={() => {\n                decreaseQuantity(productInfo);\n              }}>\n              -\n            </Button>\n          </ButtonGroup>\n        </div>\n      </CardActions>\n      <div>\n        <span className={classes.productName}>{name}</span>\n        <div className={classes.totalContainer}>\n          <span className={classes.leftSpacing}>Total</span>\n          <span className={classes.leftSpacing}>{quantity * price}</span>\n        </div>\n      </div>\n      <Button\n        onClick={() => {\n          removeCartItem(productInfo);\n        }}\n        variant=\"outlined\"\n        className={classes.addBtn}>\n        Remove\n      </Button>\n    </Card>\n  );\n};\n\nCartProduct.propTypes = {\n  cartItems: PropTypes.array,\n  removeCartItem: PropTypes.func,\n  decreaseQuantity: PropTypes.func\n};\n\nconst mapStateToProps = ({ cartReducer }) => {\n  const { cartItems } = cartReducer;\n\n  return {\n    cartItems\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addToCart: cartProduct => dispatch(addToCart(cartProduct)),\n  decreaseQuantity: cartProduct => dispatch(decreaseQuantity(cartProduct)),\n  removeCartItem: cartProduct => dispatch(removeCartItem(cartProduct))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(memo(CartProduct));\n"]},"metadata":{},"sourceType":"module"}