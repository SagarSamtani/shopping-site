{"ast":null,"code":"var _jsxFileName = \"/Users/samtanis/Sagar Projects/AegonLife/aegon-app/src/components/Dashboard/index.js\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Product from \"components/Product\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { getProducts } from \"services/apis\";\nimport React, { useEffect, memo } from \"react\";\nimport dashboardStyles from \"styles/dashboard\";\nimport { addToCart } from \"actions/cart/cartActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setProducts } from \"actions/product/productActions\";\nconst useStyles = makeStyles(theme => dashboardStyles(theme));\n\nconst Dashboard = props => {\n  const {\n    setProducts,\n    products,\n    addToCart\n  } = props;\n  const classes = useStyles();\n  useEffect(() => {\n    const callProducts = async () => {\n      try {\n        const response = await getProducts(),\n              {\n          data: products\n        } = response;\n        setProducts(products);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    callProducts();\n  }, []);\n  const productsList = products.map(eachProduct => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: `grid-${eachProduct.id}`,\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Product, {\n      key: eachProduct.id,\n      productInfo: eachProduct,\n      onClickHandler: () => {\n        addToCart(eachProduct);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, productsList);\n};\n\nDashboard.propTypes = {\n  addToCart: PropTypes.func,\n  products: PropTypes.array,\n  cartItems: PropTypes.array,\n  setProducts: PropTypes.func\n};\n\nconst mapStateToProps = ({\n  productReducer,\n  cartReducer\n}) => {\n  const {\n    products\n  } = productReducer,\n        {\n    cartItems\n  } = cartReducer;\n  return {\n    products,\n    cartItems\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setProducts: productsList => dispatch(setProducts(productsList)),\n  addToCart: cartProduct => dispatch(addToCart(cartProduct))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(Dashboard));","map":{"version":3,"sources":["/Users/samtanis/Sagar Projects/AegonLife/aegon-app/src/components/Dashboard/index.js"],"names":["PropTypes","connect","Product","Grid","getProducts","React","useEffect","memo","dashboardStyles","addToCart","makeStyles","setProducts","useStyles","theme","Dashboard","props","products","classes","callProducts","response","data","error","console","productsList","map","eachProduct","id","container","propTypes","func","array","cartItems","mapStateToProps","productReducer","cartReducer","mapDispatchToProps","dispatch","cartProduct"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Product from \"components/Product\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { getProducts } from \"services/apis\";\nimport React, { useEffect, memo } from \"react\";\nimport dashboardStyles from \"styles/dashboard\";\nimport { addToCart } from \"actions/cart/cartActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { setProducts } from \"actions/product/productActions\";\n\nconst useStyles = makeStyles(theme => dashboardStyles(theme));\n\nconst Dashboard = props => {\n  const { setProducts, products, addToCart } = props;\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    const callProducts = async () => {\n      try {\n        const response = await getProducts(),\n          { data: products } = response;\n        setProducts(products);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    };\n\n    callProducts();\n  }, []);\n\n  const productsList = products.map(eachProduct => {\n    return (\n      <Grid key={`grid-${eachProduct.id}`} item xs={3}>\n        <Product\n          key={eachProduct.id}\n          productInfo={eachProduct}\n          onClickHandler={() => {\n            addToCart(eachProduct);\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Grid className={classes.container} container spacing={3}>\n      {productsList}\n    </Grid>\n  );\n};\n\nDashboard.propTypes = {\n  addToCart: PropTypes.func,\n  products: PropTypes.array,\n  cartItems: PropTypes.array,\n  setProducts: PropTypes.func\n};\n\nconst mapStateToProps = ({ productReducer, cartReducer }) => {\n  const { products } = productReducer,\n    { cartItems } = cartReducer;\n\n  return {\n    products,\n    cartItems\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setProducts: productsList => dispatch(setProducts(productsList)),\n  addToCart: cartProduct => dispatch(addToCart(cartProduct))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(memo(Dashboard));\n"]},"metadata":{},"sourceType":"module"}