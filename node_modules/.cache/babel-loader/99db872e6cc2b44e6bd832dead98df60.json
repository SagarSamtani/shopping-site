{"ast":null,"code":"import { cartActionTypes } from \"utils/actionTypes\";\nconst {\n  ADD_TO_CART,\n  REMOVE_FROM_CART\n} = cartActionTypes;\nconst initialState = {\n  cartItems: []\n};\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case ADD_TO_CART:\n      const cloneCartItems = [...state.cartItems],\n            previousEntryOfItem = cloneCartItems.filter(cartItem => cartItem.id === payload.id);\n\n      if (previousEntryOfItem.length) {\n        previousEntryOfItem[0].quantity += 1;\n      } else {\n        payload.quantity = 0;\n        cloneCartItems.push(payload);\n      }\n\n      return { ...state,\n        cloneCartItems\n      };\n\n    case REMOVE_FROM_CART:\n      return { ...state,\n        cloneCartItems\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/samtanis/Sagar Projects/AegonLife/aegon-app/src/reducers/cart/cartReducer.js"],"names":["cartActionTypes","ADD_TO_CART","REMOVE_FROM_CART","initialState","cartItems","state","action","type","payload","cloneCartItems","previousEntryOfItem","filter","cartItem","id","length","quantity","push"],"mappings":"AAAA,SAASA,eAAT,QAAgC,mBAAhC;AAEA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAAoCF,eAA1C;AAEA,MAAMG,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AADQ,CAArB;AAIA,gBAAe,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKN,WAAL;AACE,YAAMQ,cAAc,GAAG,CAAC,GAAGJ,KAAK,CAACD,SAAV,CAAvB;AAAA,YACEM,mBAAmB,GAAGD,cAAc,CAACE,MAAf,CACpBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBL,OAAO,CAACK,EADhB,CADxB;;AAIA,UAAIH,mBAAmB,CAACI,MAAxB,EAAgC;AAC9BJ,QAAAA,mBAAmB,CAAC,CAAD,CAAnB,CAAuBK,QAAvB,IAAmC,CAAnC;AACD,OAFD,MAEO;AACLP,QAAAA,OAAO,CAACO,QAAR,GAAmB,CAAnB;AACAN,QAAAA,cAAc,CAACO,IAAf,CAAoBR,OAApB;AACD;;AACD,aAAO,EACL,GAAGH,KADE;AAELI,QAAAA;AAFK,OAAP;;AAKF,SAAKP,gBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELI,QAAAA;AAFK,OAAP;;AAKF;AACE,aAAOJ,KAAP;AAxBJ;AA0BD,CA5BD","sourcesContent":["import { cartActionTypes } from \"utils/actionTypes\";\n\nconst { ADD_TO_CART, REMOVE_FROM_CART } = cartActionTypes;\n\nconst initialState = {\n  cartItems: []\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ADD_TO_CART:\n      const cloneCartItems = [...state.cartItems],\n        previousEntryOfItem = cloneCartItems.filter(\n          cartItem => cartItem.id === payload.id\n        );\n      if (previousEntryOfItem.length) {\n        previousEntryOfItem[0].quantity += 1;\n      } else {\n        payload.quantity = 0;\n        cloneCartItems.push(payload);\n      }\n      return {\n        ...state,\n        cloneCartItems\n      };\n\n    case REMOVE_FROM_CART:\n      return {\n        ...state,\n        cloneCartItems\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}